services:
  immich-server:
    container_name: immich_server
    command: ['/usr/src/app/bin/immich-dev']
    image: immich-server-dev:latest
    build:
      context: ../
      dockerfile: server/Dockerfile
      target: dev
    restart: always
    volumes:
      - ../server:/usr/src/app
      - ../open-api:/usr/src/open-api
      - idrivee2-photo:/usr/src/app/upload
      - idrivee2-photo:/usr/src/app/upload/upload
      - /usr/src/app/node_modules
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    environment:
      IMMICH_REPOSITORY: immich-app/immich
      IMMICH_REPOSITORY_URL: https://github.com/wonderkidshihab/photo-backup
      IMMICH_SOURCE_REF: local
      IMMICH_SOURCE_COMMIT: af2efbdbbddc27cd06142f22253ccbbbbeec1f55
      IMMICH_SOURCE_URL: https://github.com/wonderkidshihab/photo-backup/commit/af2efbdbbddc27cd06142f22253ccbbbbeec1f55
      IMMICH_BUILD: '9654404849'
      IMMICH_BUILD_URL: https://github.com/wonderkidshihab/photo-backup/actions/runs/9654404849
      IMMICH_BUILD_IMAGE: development
      IMMICH_BUILD_IMAGE_URL: https://github.com/wonderkidshihab/photo-backup/pkgs/container/immich-server
      IMMICH_THIRD_PARTY_SOURCE_URL: https://github.com/wonderkidshihab/photo-backup/
      IMMICH_THIRD_PARTY_BUG_FEATURE_URL: https://github.com/wonderkidshihab/photo-backup/issues
      IMMICH_THIRD_PARTY_DOCUMENTATION_URL: https://immich.app/docs
      IMMICH_THIRD_PARTY_SUPPORT_URL: https://immich.app/docs/third-party
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    ports:
      - 9230:9230
      - 9231:9231
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false

  immich-web:
    container_name: immich_web
    image: immich-web-dev:latest
    build:
      context: ../web
    command: ['/usr/src/app/bin/immich-web']
    env_file:
      - .env
    ports:
      - 2283:3000
      - 24678:24678
    volumes:
      - ../web:/usr/src/app
      - ../i18n:/usr/src/i18n
      - ../open-api/:/usr/src/open-api/
      - /usr/src/app/node_modules
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
    restart: unless-stopped
    depends_on:
      - immich-server

  immich-machine-learning:
    container_name: immich_machine_learning
    image: immich-machine-learning-dev:latest
    build:
      context: ../machine-learning
      dockerfile: Dockerfile
      args:
        - DEVICE=cpu
    ports:
      - 3003:3003
    volumes:
      - ../machine-learning:/usr/src/app
      - model-cache:/cache
    env_file:
      - .env
    depends_on:
      - database
    restart: unless-stopped
    healthcheck:
      disable: false

  redis:
    container_name: immich_redis
    image: redis:6.2-alpine@sha256:77c6e37734720700cd47d8b7d9e8a9a6f24fc32862833b064c76e830145bebce
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    container_name: immich_postgres
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ${UPLOAD_LOCATION}/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]

volumes:
  model-cache:
  prometheus-data:
  grafana-data:
  idrivee2-photo:
    driver: rclone
    driver_opts:
      remote: 'idrivee2:immich-photo'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0
  idrivee2-databases:
    driver: rclone
    driver_opts:
      remote: 'idrivee2:immich-db'
      allow_other: 'true'
      vfs_cache_mode: full
      poll_interval: 0
